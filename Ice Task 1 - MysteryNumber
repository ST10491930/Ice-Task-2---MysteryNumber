import React, { useState } from "react";
import {
    View,
    Text,
    TextInput,
    TouchableOpacity,
    StyleSheet
} from "react-native";

const App: React.FC = () => {
    const [term, setTerm] = useState<string>("");
    const [result, setResult] = useState<string>("");

    const [secretNum, setSecretNum] = useState<number>(44); 

    const [stepCount, setStepCount] = useState<number>(0);

    function handleChange(text: string): void {
        setTerm(text);
    }

    function checkGuess(): void {
        let newResult: string = "";

        if (term === "") {
            newResult = "Enter valid input.";
        } else if (
            isNaN(Number(term)) ||
            parseInt(term) < 1 ||
            parseInt(term) > 100
        ) {
            newResult = "Enter a valid number between 1 and 100.";
        } else {
            setStepCount(prev => prev + 1);

            const guess = parseInt(term);
            if (guess < secretNum) {
                newResult = "Too low! Try again.";
            } else if (guess > secretNum) {
                newResult = "Too high! Try again.";
            } else {
                newResult = ðŸŽ‰ Correct! It took you ${stepCount + 1} ${stepCount + 1 === 1 ? "step" : "steps"}.;
            }
        }

        setResult(newResult);
    }

    function resetGame(): void {
        setTerm("");
        setResult("");
        setStepCount(0);
        setSecretNum(44); 
    }

    return (
        <View style={styles.container}>
         <Text style={styles.game}>
                ðŸ”¢ Mystery Number Game
            </Text>
            <Text style={styles.head}>
                Guess Number between 1 to 100
            </Text>

            <TextInput
                style={styles.input}
                placeholder="Enter your guess"
                onChangeText={handleChange}
                value={term}
                keyboardType="numeric"
            />

            <TouchableOpacity style={styles.button} onPress={checkGuess}>
                <Text style={styles.buttonText}>Check</Text>
            </TouchableOpacity>

            <Text style={styles.result}>{result}</Text>

            <TouchableOpacity style={styles.button1} onPress={resetGame}>
                <Text style={styles.buttonText1}>Reset</Text>
            </TouchableOpacity>
        </View>
    );
};

const styles = StyleSheet.create({
    container: {
        flex: 1,
        alignItems: "center",
        justifyContent: "center",
        backgroundColor: "#f2f2f2",
        padding: 16,
    },
    game: {
        fontWeight: "bold",
        fontSize: 23,
        marginBottom: 20,
        color: "#333",
    },
    head: {
        fontWeight: "bold",
        fontSize: 18,
        marginBottom: 20,
        color: "#333",
    },
    input: {
        padding: 10,
        borderWidth: 1,
        borderColor: "#ccc",
        borderRadius: 10,
        width: "80%",
        marginBottom: 20,
        backgroundColor: "#fff",
        fontSize: 18,
    },
    button: {
        backgroundColor: "#007BFF",
        borderRadius: 10,
        paddingVertical: 12,
        paddingHorizontal: 24,
    },
    buttonText: {
        color: "#fff",
        fontSize: 18,
        fontWeight: "bold",
    },
    result: {
        marginTop: 20,
        fontSize: 18,
        color: "#333",
        fontWeight: "bold",
    },
    button1: {
        backgroundColor: "#FF3B30",
        borderRadius: 10,
        paddingVertical: 12,
        paddingHorizontal: 24,
        marginTop: 12,
    },
    buttonText1: {
        color: "#fff",
        fontSize: 18,
        fontWeight: "bold",
    },
});

exportÂ defaultÂ App;